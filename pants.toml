[GLOBAL]
pants_version = "2.16.0rc3"
pantsd = true 
build_patterns = ["BUILD.pants", "BUILD"]
pythonpath = ["pants-plugins"]
print_stacktrace = true

backend_packages = [
    "pants.backend.plugin_development",
    "pants.backend.experimental.cc",
    "pants.backend.experimental.cc.lint.clangformat",
    "pants.backend.experimental.javascript",
    "pants.backend.experimental.javascript.lint.prettier",
    "pants.backend.python",
    "pants.backend.python.lint.autoflake",
    "pants.backend.python.lint.bandit",
    "pants.backend.python.lint.black",
    "pants.backend.python.lint.flake8",
    "pants.backend.python.lint.isort",
    "pants.backend.python.lint.pyupgrade",
    "pants.backend.python.typecheck.mypy",
    "pants.backend.shell",
    "pants.backend.shell.lint.shellcheck",
    "pants.backend.shell.lint.shfmt",
    "experimental.scie",
    # "experimental.mypyc",
    #"experimental.ansible",
    #"experimental.ansible.lint.ansible_lint",
    #"experimental.swift",
]

[source]
marker_filenames = ["BUILD.pants"]
root_patterns = [
    "pants-plugins",
]

#[ansible-galaxy]
#requirements = "requirements.yml" # Relative to the Ansible target BUILD
#collections = ["community.docker"]

[python]
enable_resolves = true
interpreter_constraints = [">=3.9"]
tailor_pex_binary_targets = false

[python.resolves]
pants-plugins = "build-support/pants-plugins/lock.txt"
python-default = "build-support/python/default_lock.txt"

[python.resolves_to_interpreter_constraints]
pants-plugins = [">=3.9,<3.10"]

[bandit]
# Skipping assertion warnings - because this is an example project
args = ["--skip B101"]

[flake8]
args = ["--max-line-length 88", "--ignore=E501,W503"]

[isort]
args = "--profile black"

[pyupgrade]
args = "--py39-plus"

[setuptools]
extra_requirements = ["wheel", "mypy"]
lockfile = "build-support/setuptools.txt"

[shfmt]
# See https://github.com/mvdan/sh/blob/master/cmd/shfmt/shfmt.1.scd#printer-flags.
args = ["-i 4", "-ci", "-sr"]

[anonymous-telemetry]
enabled = false
